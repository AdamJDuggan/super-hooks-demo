{"version":3,"sources":["components/Header.js","components/Landing.js","components/Hook.js","hooksData.js","examples/FirstRender.js","examples/InitialFocus.js","examples/WindowWidth.js","examples/ScrollToBottom.js","examples/ShowHideElement.js","examples/StateObject.js","examples/ScrollWithKeys.js","examples/ToggleInput.js","App.js","index.js"],"names":["Header","className","href","Landing","Hook","props","name","description","details","code","children","language","hooks","keywords","url","getHook","find","hook","FirstRender","React","useState","count","setCount","firstRender","useFirstRender","onClick","InitialFocus","initialFocus","useInitialFocus","ref","Details","WindowWidth","useWindowWidth","screenWidth","isMobile","isTablet","isDesktop","isDesktopLarge","style","color","ScrollToBottom","Array","from","length","_","i","posts","setPosts","post","setPost","scrollContainer","useScrollToBottom","map","index","onSubmit","e","preventDefault","value","onChange","target","ShowHideMenu","dropDownMenu","useShowHideElement","console","log","minHeight","show","visible","useStateObject","country","state","setState","width","scrollRef","useScrollWithKeys","row","background","height","padding","ToggleInput","useToggleInput","alert","text","setText","edit","setEdit","inputRef","onSave","disabled","App","useEffect","window","scrollTo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed815e61.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Header() {\n  return (\n    <div className=\"flex content-center justify-between bg-black text-white font-bold p-6 mb-7 top-0\">\n      <a href=\"/\">Super Hooks </a>\n      <a href=\"https://www.npmjs.com/package/super-hooks\">\n        <i className=\"fab fa-npm fa-2x\"></i>\n      </a>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function Landing() {\n  return (\n    <div className=\"overflow-y-auto text-center mb-20\">\n      <div className=\"imageGrid\"></div>\n\n      <div className=\"flex flex-col items-center\">\n        <div className=\" mb-20 items-center\">\n          <div className=\"font-bold text-center\">\n            <div className=\"text-5xl mb-2\">Super Hooks</div>\n            <div className=\"text-3xl mb-4\">\n              A selection of utility hooks for react development\n            </div>\n            <div className=\"text-1xl text-orange\">npm install super-hooks</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Prism } from \"react-syntax-highlighter\";\n\nexport default function Hook(props) {\n  const { name, description, details, code, children } = props;\n  return (\n    <div className=\"max-w-screen-lg mx-auto pb-10 mb-20 border-b-2 border-fuchsia-600\">\n      <h2 className=\"text-3xl font-bold mb-6\">{name}</h2>\n      <p className=\"text-2xl mb-10\">{description}</p>\n      {details && <p className=\"mb-10\">{details()}</p>}\n      <h3 className=\"text-2xl font-bold mb-2\">Code</h3>\n      <Prism language=\"javascript\">{code}</Prism>\n      <h3 className=\"text-2xl font-bold mt-10 mb-6\">Example</h3>\n      <div className=\"bg-white p-4\">{children}</div>\n    </div>\n  );\n}\n","const hooks = [\n  {\n    name: \"useScrollToBottom()\",\n    description: `Recieves an array and returns a ref which, when placed on a div wrapping the array, \n    will scroll to bottom of the div when new elements are added to the array.`,\n    keywords: [\"scroll\", \"bottom\", \"chatbox\", \"new\", \"messages\"],\n    url: \"/scrollToBottom\",\n  },\n  {\n    name: \"useShowHideElement()\",\n    description: \"Show and hide an element such as a dropdown menu.\",\n    keywords: [\"dropdown\", \"menu\", \"open\", \"outside\", \"click\"],\n    url: \"/showHideElement\",\n  },\n  {\n    name: \"useScrollWithKeys()\",\n    description:\n      \"Returns a ref. Place this ref on a div and use the arrow keys to scroll between child elements of that parent div.\",\n    keywords: [\"scroll\", \"arrow\", \"keys\", \"rows\", \"position\"],\n    url: \"/scrollWithKeys\",\n  },\n  {\n    name: \"useWindowWidth()\",\n    description: `When you need javascript for breakpoints and responsive design.`,\n    keywords: [\"window\", \"responsive\", \"width\", \"breakpoints\"],\n    url: \"/windowWidth\",\n  },\n  {\n    name: \"useStateObject()\",\n    description:\n      \"Merge updated properties into large state object to prevent having to always spread other values.\",\n    keywords: [\"state\", \"object\", \"merge\", \"spread\"],\n    url: \"/stateObject\",\n  },\n\n  {\n    name: \"useToggleInput()\",\n    description:\n      \"When you want to toggle between a text value and an input to update that value.\",\n    keywords: [\"input\", \"inline\", \"update\", \"click\"],\n    url: \"/toggleInput\",\n  },\n  {\n    name: \"useInitialFocus()\",\n    description:\n      \"Returns a ref which can be placed on an element to focus that elememt as soon as it renders.\",\n    keywords: [\"ref\", \"current\", \"focus\", \"initial\", \"input\"],\n    url: \"/initialFocus\",\n  },\n\n  {\n    name: \"useFirstRender()\",\n    description:\n      \"Returns a boolean which is true when the enclosing components first renders.\",\n    keywords: [\"first\", \"render\", \"mount\", \"initial\"],\n    url: \"/firstRender\",\n  },\n];\n\nconst getHook = (name) => {\n  return hooks.find((hook) => hook.name === name);\n};\n\nexport { hooks };\nexport { getHook };\n","import React from \"react\";\nimport { useFirstRender } from \"super-hooks\";\nimport Hook from \"../components/Hook\";\nimport { getHook } from \"../hooksData\";\n\nconst code = `\n  import { useFirstRender } from \"super-hooks\";\n    \n  const firstRender = useFirstRender();  \n\n  return (\n      <div>\n      {firstRender && <p>First render!</p>}\n      </div>\n    )\n  `;\nconst hook = getHook(\"useFirstRender()\");\n\nexport default function FirstRender() {\n  const [count, setCount] = React.useState(0);\n  const firstRender = useFirstRender();\n\n  return (\n    <Hook {...hook} code={code}>\n      <div>\n        <strong>First render of component: </strong>\n        {firstRender ? \" True\" : \" False\"}\n      </div>\n      <div className=\"mb-2\">\n        <strong>Count: </strong>\n        {count}\n      </div>\n      <button\n        onClick={() => setCount((count) => count + 1)}\n        className=\"p-1 rounded font-bold bg-blue-600 text-white block\"\n      >\n        Add\n      </button>\n    </Hook>\n  );\n}\n","import React from \"react\";\nimport { useInitialFocus } from \"super-hooks\";\nimport Hook from \"../components/Hook\";\nimport { getHook } from \"../hooksData\";\n\nconst code = `\n    import { useInitialFocus } from \"super-hooks\";\n    \n    const initialFocus = useInitialFocus();\n    \n    return (\n      <input ref={initialFocus} />\n    )\n    `;\nconst hook = getHook(\"useInitialFocus()\");\n\nexport default function InitialFocus() {\n  const initialFocus = useInitialFocus();\n  return (\n    <Hook {...hook} code={code}>\n      <label className=\"block\">Focus this one on render</label>\n      <input className=\"rounded border-2 border-grey-900\" ref={initialFocus} />\n      <label className=\"block mt-4\">Not this one</label>\n      <input className=\"rounded border-2 border-grey-900\" />\n    </Hook>\n  );\n}\n","import React from \"react\";\nimport { useWindowWidth } from \"super-hooks\";\nimport Hook from \"../components/Hook\";\nimport { getHook } from \"../hooksData\";\n\nconst code = `\nimport { useWindowWidth } from \"super-hooks\";\n    \nconst { \n  screenWidth, \n  isMobile, \n  isTablet, \n  isDesktop, \n  isDesktopLarge } = useWindowWidth(600, 1000, 1300, 1500);\n\n  return (\n    <div>\n      <p>The screen width is: {screenWidth}</p>\n\n      // Only show to messaage to mobile users \n      {isMobile && <p>Hello mobile user</p>}\n\n      // Only show to messaage to users using a desktop computer \n      {!isTablet && <p>Hello desktop user</p>}\n\n    </div>\n  )\n    `;\n\nconst Details = () => (\n  <ul className=\"mx-4\">\n    <li className=\"list-disc mb-4\">\n      The hook returns the following values:{\" \"}\n      <strong>screenWith, isMobile, isTablet, isDesktop</strong> and\n      <strong> isDesktopLarge</strong>.\n    </li>\n    <li className=\"list-disc mb-4\">\n      <strong>screenWidth</strong> is always set to window.innerWidth so returns\n      a number value which is pixels.\n    </li>\n    <li className=\"list-disc mb-4\">\n      <strong>isMobile</strong> and other values are booleans which return true\n      when the <strong>screenWidth</strong> is less than a number which is\n      mapped to that value. For example, <strong>isDesktop</strong> = true when\n      <strong> screenWidth</strong> is less than 1280px.\n    </li>\n    <li className=\"list-disc mb-4\">\n      If you do not pass any values to the hook it will by default map the\n      following values:\n    </li>\n    <div className=\"ml-4 mb-4\">\n      <li className=\"mb-2\">\n        <strong>isMobile:</strong> screenWidth &#60; 700px\n      </li>\n      <li className=\"mb-2\">\n        <strong>isTablet:</strong> screenWidth &#60; 1024px\n      </li>\n      <li className=\"mb-2\">\n        <strong>isDesktop:</strong> screenWidth &#60; 1280px\n      </li>\n      <li className=\"mb-2\">\n        <strong>isDesktopLarge:</strong> screenWidth &#60; 1536px\n      </li>\n    </div>\n    <li className=\"list-disc mb-4\">\n      However, you can set your own breakpoints by passing four number values to\n      the hook. In the below example <strong>isMobile</strong> is now true when\n      the screenWidth is less than 600px.\n    </li>\n  </ul>\n);\n\nconst hook = getHook(\"useWindowWidth()\");\n\nexport default function WindowWidth() {\n  const { screenWidth, isMobile, isTablet, isDesktop, isDesktopLarge } =\n    useWindowWidth();\n  return (\n    <Hook {...hook} details={Details} code={code}>\n      <div>\n        <p className=\"mb-2\">\n          <strong>Screen width: </strong>\n          {screenWidth}\n        </p>\n        <div className=\"flex flex-wrap\"></div>\n        <strong\n          style={{ color: isMobile ? \"green\" : \"red\" }}\n          className=\"mr-4 mb-2\"\n        >\n          isMobile\n        </strong>\n        <strong\n          style={{ color: isTablet ? \"green\" : \"red\" }}\n          className=\"mr-4 mb-2\"\n        >\n          isTablet\n        </strong>\n        <strong\n          style={{ color: isDesktop ? \"green\" : \"red\" }}\n          className=\"mr-4 mb-2\"\n        >\n          isDesktop\n        </strong>\n        <strong\n          style={{ color: isDesktopLarge ? \"green\" : \"red\" }}\n          className=\"mr-4 mb-2\"\n        >\n          isDesktopLarge\n        </strong>\n      </div>\n    </Hook>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useScrollToBottom } from \"super-hooks\";\nimport Hook from \"../components/Hook\";\nimport { getHook } from \"../hooksData\";\n\nconst code = `\n  import { useScrollToBottom } from \"super-hooks\";\n\n  const { scrollContainer } = useScrollToBottom(posts);\n  \n  return (\n      <div  ref={scrollContainer}>\n      {posts.map(post => <li>{post}</li>)}\n      </div>\n    )\n  `;\nconst hook = getHook(\"useScrollToBottom()\");\n\nexport default function ScrollToBottom() {\n  const [posts, setPosts] = useState(\n    Array.from({ length: 30 }, (_, i) => ` Post ${i + 1}`)\n  );\n  const [post, setPost] = useState(\"\");\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setPosts((posts) => [...posts, post]);\n    setPost(\"\");\n  };\n\n  const { scrollContainer } = useScrollToBottom(posts);\n\n  return (\n    <Hook {...hook} code={code}>\n      <div\n        className=\"rounded border border-gray-800 p-2 h-24 overflow-auto mb-2\"\n        ref={scrollContainer}\n      >\n        {posts.map((post, index) => (\n          <p key={index}>{post}</p>\n        ))}\n      </div>\n      <form onSubmit={onSubmit}>\n        <input\n          value={post}\n          onChange={(e) => setPost(e.target.value)}\n          className=\"py-2 px-3 rounded border border-gray-800 mb-2\"\n        />\n        <button className=\"p-1 rounded font-bold bg-blue-600 text-white block\">\n          Add Post\n        </button>\n      </form>\n    </Hook>\n  );\n}\n","import React from \"react\";\nimport { useShowHideElement } from \"super-hooks\";\nimport Hook from \"../components/Hook\";\nimport { getHook } from \"../hooksData\";\n\nconst code = `\n    import { useShowHideElement } from \"super-hooks\";\n    \n    const dropDownMenu = useShowHideElement();\n    \n    return (\n      <>\n        <button onClick={dropDownMenu.show}>Show  menu</button>\n\n        {dropDownMenu.visible && (\n          <div ref={dropDownMenu.ref}>\n            <h2>Menu</h2>\n            <p>Item 1</p>\n            <p>Item 2</p>\n          </div>\n        )}\n      </>\n    )\n    `;\n\nconst Details = () => (\n  <ul className=\"mx-4\">\n    <li className=\"mb-4\">The hook returns an object with the following...</li>\n    <li className=\"mb-4 ml-2 list-disc\">\n      <strong>visible: </strong> A boolean value used in your jsx to\n      conditionally dispaly the element. By default visible is set to false.\n      However, you can overide this by passing an arguement (true) to the hook\n      like this\n      <strong>useShowHideElement(true)</strong>.\n    </li>\n    <li className=\"mb-4 ml-2 list-disc\">\n      <strong>ref: </strong> A ref to be placed on the element/div which you\n      want to show/hide. If you click outside of this element it will set\n      visible to false.\n    </li>\n    <li className=\"mb-4 ml-2 list-disc\">\n      <strong>show(), hide() and toggle(): </strong> Functions which change the\n      state of visible. You can guess what they each do!\n    </li>\n  </ul>\n);\n\nconst hook = getHook(\"useShowHideElement()\");\n\nexport default function ShowHideMenu() {\n  const dropDownMenu = useShowHideElement();\n  console.log(dropDownMenu);\n  return (\n    <Hook {...hook} details={Details} code={code}>\n      <div style={{ minHeight: 192 }}>\n        <button\n          className=\"p-1 rounded font-bold bg-blue-600 text-white block\"\n          onClick={dropDownMenu.show}\n        >\n          Show menu\n        </button>\n        {dropDownMenu.visible && (\n          <div\n            ref={dropDownMenu.ref}\n            className=\"bg-purple-100 rounded shadow-lg p-4 w-36 m-2\"\n          >\n            <h2 className=\"font-bold mb-2\">Menu</h2>\n            <p>List item 1</p>\n            <p>List item 2</p>\n          </div>\n        )}\n      </div>\n    </Hook>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useStateObject } from \"super-hooks\";\nimport Hook from \"../components/Hook\";\nimport { getHook } from \"../hooksData\";\n\nconst code = `\n    import { useStateObject } from \"super-hooks\";\n    \n    const [state, setState] = useStateObject({\n        name: \"Blanka\",\n        country: \"Brazil\",\n        color: \"green\",\n    });\n    \n    return (\n      <input value={state.name} onChange={e => setState({name: e.target.value})}\n    )\n    `;\nconst hook = getHook(\"useStateObject()\");\n\nexport default function InitialFocus() {\n  const [state, setState] = useStateObject({\n    name: \"Blanka\",\n    country: \"Brazil\",\n    color: \"Green\",\n  });\n\n  return (\n    <Hook {...hook} code={code}>\n      <div className=\"flex flex-wrap justify-center\">\n        <div className=\"m-6 bg-blue-100 rounded p-4\">\n          <div className=\"text-xl font-bold mb-5\">Update values</div>\n          <label className=\"block font-bold\">Name</label>\n          <input\n            value={state.name}\n            onChange={(e) => setState({ name: e.target.value })}\n            className=\"rounded border-2 border-grey-400 mb-3 p-1\"\n          />\n          <label className=\"block font-bold\">Country</label>\n          <input\n            value={state.country}\n            onChange={(e) => setState({ country: e.target.value })}\n            className=\"rounded border-2 border-grey-400 mb-3 p-1\"\n          />\n          <label className=\"block font-bold\">Color</label>\n          <input\n            value={state.color}\n            onChange={(e) => setState({ color: e.target.value })}\n            className=\"rounded border-2 border-grey-400 mb-3 p-1\"\n          />\n        </div>\n        <div\n          style={{ width: 296 }}\n          className=\"m-6 pt-6 bg-purple-100 rounded p-4\"\n        >\n          <div className=\"text-xl font-bold mb-5\">Display values</div>\n\n          <p className=\"mb-2\">\n            <strong>Name: </strong>\n            {state.name}\n          </p>\n          <p className=\"mb-2\">\n            <strong>Country: </strong>\n            {state.country}\n          </p>\n          <p className=\"mb-2\">\n            <strong>Color: </strong>\n            {state.color}\n          </p>\n        </div>\n      </div>\n    </Hook>\n  );\n}\n","import React from \"react\";\nimport { useScrollWithKeys } from \"super-hooks\";\nimport Hook from \"../components/Hook\";\nimport { getHook } from \"../hooksData\";\n\nconst code = `\n    import { useScrollWithKeys } from \"super-hooks\";\n    \n    const { scrollRef } = useScrollWithKeys(true);\n    \n    return (\n      <div ref={scrollRef}>\n        <div>Row 1</div>\n        <div>Row 2</div>\n        <div>Row 3</div>\n      </div>\n    )\n    `;\nconst hook = getHook(\"useScrollWithKeys()\");\n\nexport default function InitialFocus() {\n  const { scrollRef } = useScrollWithKeys(true);\n  const rows = [\n    \"#3273dc\",\n    \"#00d1b2\",\n    \"#ff3860\",\n    \"#363636\",\n  ];\n  return (\n    <Hook {...hook} code={code}>\n      <div ref={scrollRef}>\n        {rows.map((row, index) => (\n          <div\n            style={{\n              background: row,\n              color: \"white\",\n              height: 300,\n              padding: 50,\n            }}\n          >\n            {index + 1}\n          </div>\n        ))}\n      </div>\n    </Hook>\n  );\n}\n","import React from \"react\";\nimport { useToggleInput } from \"super-hooks\";\nimport Hook from \"../components/Hook\";\nimport { getHook } from \"../hooksData\";\n\nconst code = `\n    import { useToggleInput } from \"super-hooks\";\n    \n    const { text, setText, edit, setEdit, inputRef, onSave } = useToggleInput(\n    () => alert(text),\n    \"Blanka\"\n  );\n\n    return (\n       {edit ? (\n        <form onSubmit={onSave}>\n          <input\n            ref={inputRef}\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n          />\n          <button>Save</button>\n        </form>\n      ) : (\n        <div  onClick={() => setEdit(true)}>\n          {text}\n        </div>\n      )}\n    )\n    `;\nconst hook = getHook(\"useToggleInput()\");\n\nexport default function ToggleInput() {\n  const { text, setText, edit, setEdit, inputRef, onSave } = useToggleInput(\n    () => alert(text),\n    \"Current Value. Click me to update\"\n  );\n  return (\n    <Hook {...hook} code={code}>\n      {edit ? (\n        <form onSubmit={onSave} className=\"flex\">\n          <input\n            ref={inputRef}\n            value={text}\n            onChange={(e) => setText(e.target.value)}\n            className=\"rounded border-2 border-grey-400 mr-2 p-1\"\n          />\n          <button\n            className=\"p-1 rounded font-bold bg-blue-600 text-white block\"\n            disabled={text === \"\"}\n          >\n            Save\n          </button>\n        </form>\n      ) : (\n        <div className=\"cursor-pointer\" onClick={() => setEdit(true)}>\n          {text}\n        </div>\n      )}\n    </Hook>\n  );\n}\n","// React\nimport { useEffect } from \"react\";\n\n//Components\nimport Header from \"./components/Header\";\nimport Landing from \"./components/Landing\";\n\n\n// Hook components\nimport FirstRender from \"./examples/FirstRender\";\nimport InitialFocus from \"./examples/InitialFocus\";\nimport WindowWidth from \"./examples/WindowWidth\";\nimport ScrollToBottom from \"./examples/ScrollToBottom\";\nimport ShowHideElement from \"./examples/ShowHideElement\";\nimport StateObject from \"./examples/StateObject\";\nimport ScrollWithKeys from \"./examples/ScrollWithKeys\";\nimport ToggleInput from \"./examples/ToggleInput\";\n\nfunction App() {\n    useEffect(() => {\n      window.scrollTo(0, 0);\n    }, []);\n  return (\n    <div className=\"bg-gray-100\">\n      <Header />\n      <div className=\"p-4 \">\n        <Landing />\n        <ScrollToBottom />\n        <ScrollWithKeys />\n        <ShowHideElement />\n        <WindowWidth />\n        <StateObject />\n        <ToggleInput />\n        <FirstRender />\n        <InitialFocus />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/main.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}